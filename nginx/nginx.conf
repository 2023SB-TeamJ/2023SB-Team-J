upstream api {
    server backend1:8001;
    server backend2:8002;
    server backend3:8003;
    server backend4:8004;
}

server {
    listen 80;
    server_name thiss4u.site;
    server_tokens off;
    client_max_body_size 10M;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name thiss4u.site;
    charset utf-8;
    client_max_body_size 10M;
    ssl_certificate /etc/letsencrypt/live/thiss4u.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/thiss4u.site/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }

    location /api/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://api;

        proxy_cache_bypass $http_pragma;
        proxy_cache_bypass $http_authorization;
        proxy_no_cache 1;
    }

    location /staticfiles {
        alias /backend/staticfiles;
        proxy_cache_bypass $http_pragma;
        proxy_cache_bypass $http_authorization;
        proxy_no_cache 1;
    }

    location /mediafiles {
        alias /data/mediafiles;
        proxy_cache_bypass $http_pragma;
        proxy_cache_bypass $http_authorization;
        proxy_no_cache 1;
    }

    location ~* (service-worker\.js)$ {
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        expires off;
        proxy_no_cache 1;
    }

    location / {
        root /var/www/frontend;
        try_files $uri $uri/ /index.html?q=$uri&$args;
    }
}
