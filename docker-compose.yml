version: "3.9"

services:
  database:
    image: mysql:8.0
    container_name: t4y-database
    env_file:
      - ./backend/.env
    ports:
    - 3306:3306

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: t4y-backend
    volumes:
      - ./backend:/backend
    restart: on-failure
    ports:
      - 8000:8000
    depends_on:
      - database
    environment:
      - DB_HOST=t4y-database
      - DB_NAME=mydatabase
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
    command: sh -c "/wait &  python manage.py makemigrations common
      && python manage.py migrate common
      && python manage.py makemigrations image
      && python manage.py migrate image
      && python manage.py makemigrations album
      && python manage.py migrate album
      && python manage.py runserver 0.0.0.0:8000"
    tty: true
#    env_file:
#      - ./backend/.env
    # environment:
    #   - MYSQL_ROOT_PASSWORD=rootpassword
    #   - MYSQL_DATABASE=${mydatabase}
    #   - MYSQL_USER=myuser
    #   - MYSQL_PASSWORD=mypassword

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    user: root
    volumes:
      - ./prometheus/config/:/etc/prometheus/
      - ./prometheus/prometheus-volume:/prometheus
    ports:
      - 9090:9090
    command: # web.enalbe-lifecycle은 api 재시작없이 설정파일들을 reload 할 수 있게 해줌
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always
    networks:
      - promnet

  grafana:
      image: grafana/grafana
      container_name: grafana
      user: root
      environment:
        GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
      ports:
        - 3000:3000
      volumes:
        - ./grafana/grafana-volume:/var/lib/grafana
      restart: always
      depends_on:
        - prometheus
      networks:
        - promnet

networks:
  promnet:
    driver: bridge
