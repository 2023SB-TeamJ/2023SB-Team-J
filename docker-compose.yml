version: '3.9'

services:
  database:
    image: mysql:8.0
    container_name: t4y-database
    env_file:
      - ./backend/.env
    ports:
      - 3306:3306

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: t4y-backend
    volumes:
      - ./backend:/app # 컴파일시 자동으로 빌드 설정
    restart: on-failure
    ports:
      - 8000:8000
    expose:
      - 8000
    depends_on:
      - database
    environment:
      - DB_HOST=t4y-database
      - DB_NAME=mydatabase
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
    command: sh -c "/wait &  python manage.py makemigrations common
      && python manage.py makemigrations image
      && python manage.py makemigrations album
      && python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    tty: true

  # rabbitmq:
  #   hostname: t4yhost
  #   container_name: rabbitmq
  #   image: rabbitmq:3-management
  #   command: rabbitmq-server
  #   restart: unless-stopped
  #   env_file:
  #     - backend/.env
  #   ports:
  #     - 5672:5672 # Default Port
  #     - 15672:15672 # For UI=
  #   depends_on:
  #     - backend

  # celery_worker:
  #   container_name: celery_worker
  #   restart: always
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   command: "celery -A backend_project.celery worker  --loglevel=info --pool=threads --concurrency=8"
  #   depends_on:
  #     - rabbitmq
  #     - backend
  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: t4y-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/frontend

